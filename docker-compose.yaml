version: '3.1'

services:
#  web_cmc:
#    build:
#      context: .
#    environment:
#      - DB_HOST=postgres
#      - DB_USER=${POSTGRES_USER}
#      - DB_PASSWORD=${POSTGRES_PASSWORD}
#      - DB_NAME=${POSTGRES_DB}
#    ports:
#      - "8000:8000"
#    volumes:
#      - .:/cmc
#    command: >
#      sh -c "python manage.py runserver 0.0.0.0:8000"
#    depends_on:
#       - postgres



  postgres:
    container_name: postgres
    image: postgres:15.1
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  cache:
    image: redis:latest
    hostname: cache_redis
    restart: always
    ports:
      - "6379:6379" # убрать когда будет все докирезировано
    volumes:
      - ./data/cache:/data

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command:
#      - A celery_app.app worker --loglevel-info
#      celery -A --app=worker.celery worker --loglevel=info
      ['celery', '-A', 'celery_app.app', 'worker', '-l', 'info']
    volumes:
      - .:/cmc
    labels:
      - cache
    depends_on:
      - cache
    environment:
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command:
#      - A celery_app.app flower
      flower --app=worker.celery
    volumes:
      - .:/cmc
    labels:
      - cache
      - worker
    depends_on:
      - cache
      - worker
    ports:
      - "5555:5555"



volumes:
  postgres_data:
    driver: local
