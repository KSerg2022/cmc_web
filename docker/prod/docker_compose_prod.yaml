version: '3.7'

x-function: &function
  build:
    context: .
    dockerfile: Dockerfile_prod
  image: cmc:v1.02-gunicorn-nginx
  restart: unless-stopped
  env_file:
    - ../../.env
  environment:
    - DJANGO_SETTINGS_MODULE=core.settings.prod
  networks:
    - cmc_network


services:
  postgres:
    container_name: postgres_prod
    image: postgres:15.1
    hostname: postgres
    env_file:
      - ../../.env
    restart: unless-stopped
    networks:
      - cmc_network
    volumes:
      - ../../data/postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_prod
    hostname: pgadmin
    ports:
      - "3333:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    links:
      - postgres
    depends_on:
      - postgres
    networks:
      - cmc_network

  redis:
    image: redis:latest
    container_name: redis_prod
    hostname: cache_redis
    restart: unless-stopped
    networks:
      - cmc_network


  nginx:
    build:
      dockerfile: ./Dockerfile_nginx
      context: ./config/nginx
    container_name: nginx
    volumes:
      - static_volume:/cmc_pr/static
      - media_volume:/cmc_pr/media
    ports:
#      - "${NGINX_EXTERNAL_PORT}:${NGINX_INTERNAL_PORT}"
      - "80:80"
    depends_on:
      - web_cmc
    networks:
      - cmc_network


  web_cmc:
    <<: *function
    container_name: web_cmc
    volumes:
      - ../../:/cmc_pr
      - static_volume:/cmc_pr/static
      - media_volume:/cmc_pr/media
    hostname: web-cmc
    command: [ "./docker/wait-for-it.sh", "postgres:5432", "--",
               "gunicorn", "core.wsgi:application", "--bind", "0.0.0.0:8000"]
    depends_on:
      - redis
      - postgres

  worker:
    <<: *function
    container_name: worker1_prod
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    links:
      - redis
    depends_on:
      - redis

  worker2:
    <<: *function
    container_name: worker2_prod
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    links:
      - redis
    depends_on:
      - redis

  celery-beat:
    <<: *function
    container_name: celery_beat_prod
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app beat --loglevel=info
    links:
      - redis
    depends_on:
      - redis

  flower:
    container_name: flower_prod
    <<: *function
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    links:
      - redis
      - worker
    depends_on:
      - redis
      - worker
    ports:
      - "5555:5555"


volumes:
  postgres_data:
    driver: local
  static_volume:
  media_volume:


networks:
  cmc_network:
    driver: bridge